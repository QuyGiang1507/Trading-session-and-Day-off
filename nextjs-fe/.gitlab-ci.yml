default:
  image: node:19.6.0

before_script:
  - node -v

stages:
  - build
  - test
  - deploy

build_dev:
  stage: build
  before_script:
    # - git config --global gitlab.accesstoken 96FeGszBgXSCgeMzFspr
    # - git config --global credential.helper store
    # - echo "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}" >> ~/.git-credentials
    # - chmod 600 ~/.git-credentials
    # - chmod 644 ./ #~/builds/mxv-ex/mxs/mxs-auth

  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - npm install -g typescript

    - npm install --legacy-peer-deps
    - npm uninstall bootstrap
    - npm i bootstrap@5.2.3
    - npm run build:dev
    - cp -f ./package.json ./.next/
    - echo "build done."

  artifacts:
    paths:
      - .next/
    expire_in: 1 hour
  when: manual

build_staging:
  stage: build
  before_script:
    # - git config --global gitlab.accesstoken 96FeGszBgXSCgeMzFspr
    # - git config --global credential.helper store
    # - echo "https://gitlab-ci-token:${CI_JOB_TOKEN}@${CI_SERVER_HOST}" >> ~/.git-credentials
    # - chmod 600 ~/.git-credentials
    # - chmod 644 ./ #~/builds/mxv-ex/mxs/mxs-auth

  script:
    - echo "Hello, $GITLAB_USER_LOGIN!"
    - npm install -g typescript

    - npm install --legacy-peer-deps
    - npm uninstall bootstrap
    - npm i bootstrap@5.2.3
    - npm run build:staging
    - cp -f ./package.json ./.next/
    - echo "build done."

  artifacts:
    paths:
      - .next/
    expire_in: 1 hour
  when: manual

# test_job:
#   stage: test
#   needs: [build_job]
#   script:
#     - echo "This job tests something. It will only run when all jobs in the"
#     - echo "build stage are complete."
# test_job1:
#   stage: test
#   script:
#     - echo "This job tests something"
# test_job2:
#   stage: test
#   script:
#     - echo "This job tests something, but takes more time than test-job1."
#     - echo "After the echo commands complete, it runs the sleep command for 20 seconds"
#     - echo "which simulates a test that runs 20 seconds longer than test-job1"
#     - sleep 20

deploy_dev:
  stage: deploy
  image: node:alpine
  variables:
    GIT_STRATEGY: none
  # only:
  #   - main
  #   - master
  before_script:
    - apk update && apk add openssh-client bash # Install: ssh-agent bash    
    - eval $(ssh-agent -s) # chạy ssh-agent tương ứng với Gitlab Runner hiện tại
    - bash -c 'ssh-add <(echo "$SSH_MXVDEV_PRIVATE_KEY")' # thêm nội dung của biến SSH_PRIVATE_KEY vào agent store
    - mkdir -p ~/.ssh # tạo folder ~/.ssh
    - ssh-keyscan -H $SSH_MXVDEV_SERVER_IP >> ~/.ssh/known_hosts # Scan lấy SSH Host key cho địa chỉ IP server, Được kết quả bao nhiêu thì thêm vào file known_hosts
    - chmod 644 ~/.ssh/known_hosts # Sửa lại quyền của file known_hosts

  script:
    # Thực hiện SSH vào server, chuyển tới folder project
    - ssh $SSH_MXVDEV_USER@$SSH_MXVDEV_SERVER_IP 'rm -rf /var/mxs/mxs-fe/.next/*'
    - scp -r .next/. $SSH_MXVDEV_USER@$SSH_MXVDEV_SERVER_IP:/var/mxs/mxs-fe/.next/
    - ssh $SSH_MXVDEV_USER@$SSH_MXVDEV_SERVER_IP 'pm2 restart mxs-fe:4001'
    
  needs: ["build_dev"]
  dependencies:
    - build_dev


deploy_staging:
  stage: deploy
  image: node:alpine
  variables:
    GIT_STRATEGY: none
  # only:
  #   - main
  #   - master
  before_script:
    - apk update && apk add openssh-client bash # Install: ssh-agent bash    
    - eval $(ssh-agent -s) # chạy ssh-agent tương ứng với Gitlab Runner hiện tại
    - bash -c 'ssh-add <(echo "$SSH_PRIVATE_KEY")' # thêm nội dung của biến SSH_PRIVATE_KEY vào agent store
    - mkdir -p ~/.ssh # tạo folder ~/.ssh
    - ssh-keyscan -H $SSH_SERVER_IP >> ~/.ssh/known_hosts # Scan lấy SSH Host key cho địa chỉ IP server, Được kết quả bao nhiêu thì thêm vào file known_hosts
    - chmod 644 ~/.ssh/known_hosts # Sửa lại quyền của file known_hosts

  script:
    # Thực hiện SSH vào server, chuyển tới folder project
    - ssh $SSH_USER@$SSH_SERVER_IP 'rm -rf /var/mxs/mxs-fe/.next/*'
    - scp -r .next/. $SSH_USER@$SSH_SERVER_IP:/var/mxs/mxs-fe/.next/
    - ssh $SSH_USER@$SSH_SERVER_IP 'pm2 restart mxs-fe:4001'
  
  needs: ["build_staging"]
  dependencies:
    - build_staging
